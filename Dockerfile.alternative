# Alternative Dockerfile for Real-ESRGAN API
# Use this if the main Dockerfile fails with Real-ESRGAN dependencies

FROM python:3.10-slim

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    wget \
    git \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libgl1-mesa-glx \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies with verbose output and error handling
RUN pip install --no-cache-dir --upgrade pip setuptools wheel

# Install core dependencies first
RUN pip install --no-cache-dir \
    fastapi==0.104.1 \
    uvicorn[standard]==0.24.0 \
    pillow==10.1.0 \
    python-multipart==0.0.6 \
    httpx==0.25.2 \
    aiofiles==23.2.1 \
    numpy==1.24.3 \
    opencv-python-headless==4.8.1.78 \
    pydantic==2.5.0 \
    scikit-image==0.22.0

# Install PyTorch CPU
RUN pip install --no-cache-dir torch==2.0.1+cpu torchvision==0.15.2+cpu \
    --extra-index-url https://download.pytorch.org/whl/cpu

# Try to install Real-ESRGAN dependencies (will fallback to PIL if this fails)
RUN pip install --no-cache-dir basicsr==1.4.2 || echo "BasicSR failed, continuing..."
RUN pip install --no-cache-dir gfpgan==1.3.8 || echo "GFPGAN failed, continuing..."
RUN pip install --no-cache-dir facexlib==0.3.0 || echo "FaceXLib failed, continuing..."
RUN pip install --no-cache-dir timm==0.6.13 || echo "TIMM failed, continuing..."
RUN pip install --no-cache-dir lpips==0.1.4 || echo "LPIPS failed, continuing..."

# Try to install Real-ESRGAN from Git (fallback gracefully)
RUN git clone https://github.com/xinntao/Real-ESRGAN.git /tmp/Real-ESRGAN || echo "Real-ESRGAN clone failed"
RUN cd /tmp/Real-ESRGAN && pip install . || echo "Real-ESRGAN install failed, will use PIL fallback"

# Clean up
RUN rm -rf /tmp/Real-ESRGAN

# Copy application code
COPY . .

# Create temp directory for processing
RUN mkdir -p temp

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Run the application
CMD ["python", "-m", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
